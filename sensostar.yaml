esphome:
  name: sensostar
  comment: SensoStar Energy Meter
  platformio_options:
    board_build.arduino.memory_type: qio_opi
  on_boot:
    then:
      - output.turn_on: adc_control  # IO14 HIGH at boot
      - script.execute: read_adc_script  # Immediately read ADC once at boot
    
esp32:
  board: esp32-s3-devkitc-1
  flash_size: 8MB
  framework:
    type: esp-idf
    
psram:
  mode: octal
  speed: 80MHz

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "SensoStar"
  reboot_timeout: 0s 
  
  on_connect:
    - output.turn_on: wifi_led
  on_disconnect:
    - output.turn_off: wifi_led
    
captive_portal:

logger:
  level: info
  hardware_uart: UART0
  baud_rate: 115200

api:
  encryption:
    key: !secret api_encryption_key # create use openssl rand -base64 32
    
ota:
  platform: esphome
    
web_server:
  version: 3
  port: 80
    
external_components:
  - source: github://pr#8103
    components: [uart]
  - source:
      type: local
      path: !secret local_path
      #type: git                                         # Be careful ESPhome is caching the repository. Do the following to update the cache
      #url: https://github.com/STB3/esphome-sensostar    # Deleting the .esphome/external_components/ cache, or 
      #ref: main  # or a specific commit SHA             # Using a ref: to pin to a specific commit or branch.
    components: [ SensoStar_MBus ]

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Amsterdam
    servers: ["0.nl.pool.ntp.org", "1.nl.pool.ntp.org", "2.nl.pool.ntp.org"]

uart:
  - id: uart_mbus
    tx_pin: GPIO39
    rx_pin: GPIO38
    baud_rate: 2400
    parity: EVEN
    rx_full_threshold: 1
    
SensoStar_MBus:
  id: sensostar_id
  uart_id: uart_mbus
  update_interval: 10s
  data_led: mbus_data_led # Add this line, linking to the output below

sensor:
  - platform: SensoStar_MBus
    energy:
      name: "SensoStar Energy"
    volume:
      name: "SensoStar Volume"
    power:
      name: "SensoStar Power"
    flow:
      name: "SensoStar Flow"
    temperature_flow:
      name: "SensoStar Flow Temperature"
    temperature_return:
      name: "SensoStar Return Temperature"
    temperature_diff:
      name: "SensoStar Temperature Difference"
    calculated_power:
      name: "SensoStar Calculated Power"
      
  - platform: adc
    pin: GPIO1
    id: adc_input_sensor
    name: "SensoStar Battery Level"
    update_interval: never  # done by interval:
    filters:
      - lambda: return x * 3.6 * 0.919; # Vbat is measured via a resistive divider 39k--o--15k, 0.919 ADC special scaling factor hand measured

  - platform: wifi_signal
    name: "SensoStar WiFi Signal"
    id: wifi_signal_sensor
    update_interval: 60s      

text_sensor:
  - platform: SensoStar_MBus
    status:
      name: "SensoStar Status"

output:
  - platform: gpio
    pin: GPIO14
    id: adc_control
  - platform: gpio
    pin: GPIO42
    id: heartbeat_output
  - platform: gpio
    pin: GPIO2
    id: wifi_led
  - platform: gpio
    pin: GPIO41
    id: mbus_data_led    
 
script:
  - id: read_adc_script
    then:
      - output.turn_off: adc_control     # Set IO14 LOW
      - delay: 8ms  # wait until the capacitor on the resistive divider is charged
      - component.update: adc_input_sensor  # Trigger ADC read
      - output.turn_on: adc_control      # Set IO14 HIGH

interval:
  - interval: 600s
    then:
      - script.execute: read_adc_script
  - interval: 5s
    then:
      - light.turn_on: heartbeat_led
      - delay: 500ms
      - light.turn_off: heartbeat_led      

button:
  - platform: template
    name: "Read battery level now"
    on_press:
      then:
        - script.execute: read_adc_script
  - platform: template
    name: "Read WiFi Signal Now"
    on_press:
      then:
        - component.update: wifi_signal_sensor        
        
light:
  - platform: binary
    id: heartbeat_led
    output: heartbeat_output
    internal: true  # hide from Home Assistant unless needed
    
 
